<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bjsxt.mapper.EmpMapper">
	<resultMap id="BaseResultMap" type="com.bjsxt.pojo.Emp">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="dept_id" jdbcType="VARCHAR" property="deptId" />
	</resultMap>
 
	<resultMap type="com.bjsxt.pojo.Emp" id="WithDeptResultMap">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="dept_id" jdbcType="VARCHAR" property="deptId" />
		<!-- 指定联合查询出的部门字段的封装 -->
		<association property="deptName" javaType="com.bjsxt.pojo.Dept">
			<id column="d_id" property="dId" />
			<result column="d_name" property="dName" />
		</association>
	</resultMap>
 
	<insert id="insInputExcel"  >
		insert into emp_t
		<trim prefix="(id," suffix=")" suffixOverrides=",">
			<if test="name!=null and name!=''">
     			name,
     		</if>
     		<if test="sex!=null and sex!=''">
     			sex,
     		</if>
     		<if test="email!=null and email!=''">
     			email,
     		</if>
     		<if test="dept_id!=null and dept_id!=''">
     			dept_id,
     		</if>
		</trim>
		<trim prefix="values(default," suffix=")" suffixOverrides=",">
			<if test="name!=null and name!=''">
     			#{name},
     		</if>
     		<if test="sex!=null and sex!=''">
     			#{sex},
     		</if>
     		<if test="email!=null and email!=''">
     			#{email},
     		</if>
     		<if test="dept_id!=null and dept_id!=''">
     			#{dept_id},
     		</if>
		</trim>
	</insert>
 
	<sql id="WithDept_Column_List">
		e.id, e.name, e.sex, e.email, e.dept_id, d.d_id, d.d_name
	</sql>
 
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
 
<!-- 	<select id="selgetAll" resultMap="WithDeptResultMap"> -->
<!-- 		select -->
<!-- 		<if test="distinct"> -->
<!-- 			distinct -->
<!-- 		</if> -->
<!-- 		<include refid="WithDept_Column_List" /> -->
<!-- 		FROM emp_t e -->
<!-- 		left join dept_t d on e.`dept_id`=d.`d_id` order by e.id -->
<!-- 		<if test="_parameter != null"> -->
<!-- 			<include refid="Example_Where_Clause" /> -->
<!-- 		</if> -->
<!-- 	</select> -->
	<select id="selgetAll" resultType="Emp">
		select id,name,sex,email,dept_id from emp_t
		
	</select>
 
</mapper>